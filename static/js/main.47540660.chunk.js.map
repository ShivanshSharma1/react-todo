{"version":3,"sources":["App.js","index.js"],"names":["InputField","props","inputRef","useRef","useState","inputText","setInputText","tasks","setTasks","onChange","current","value","ref","onClick","console","log","map","task","i","Task","taskRef","editRef","divRef","hideRef","className","innerHTML","style","visibility","App","ReactDOM","render","document","getElementById"],"mappings":"8KAIMA,EAAa,SAACC,GAGlB,IAAMC,EAAWC,mBAHW,EAKQC,mBAAS,IALjB,mBAKpBC,EALoB,KAKTC,EALS,OAOFF,mBAAS,IAPP,mBAOrBG,EAPqB,KAOdC,EAPc,KAS5B,OACE,6BACA,6BACE,2BAAOC,SAAU,WACGH,EAAaJ,EAASQ,QAAQC,QAC/BC,IAAKV,IACxB,4BAAQW,QAAW,WACCL,GAAS,SAACD,GAAD,4BAAeA,GAAf,CAAsB,kBAAC,EAAD,CAAMF,UAAWA,EAAWG,SAAUA,EAAWD,MAAOA,SACvFO,QAAQC,IAAIR,KAFhC,OAKA,yCAEF,6BACGA,EAAMS,KAAI,SAACC,EAAMC,GAAP,OAAaD,QAMxBE,EAAO,SAAC,GAAkC,IAAjCd,EAAgC,EAAhCA,UACTe,GADyC,EAArBZ,SAAqB,EAAXD,MACpBJ,oBAEVkB,EAAUlB,mBAEVmB,EAASnB,mBAEToB,EAAUpB,mBAQd,OACE,yBAAKS,IAAKQ,GACV,yBAAKR,IAAKU,GAASjB,GACnB,4BAAQmB,UAAU,SAASX,QAAS,WAClCO,EAAQV,QAAQe,UAAY,KAC5BX,QAAQC,IAAIK,KAFd,UAGA,4BAAQP,QAAS,WACfU,EAAQb,QAAQgB,MAAMC,WAAW,YADnC,QAGA,yBAAKf,IAAKW,EAAUG,MAAO,CAACC,WAAW,WACvC,2BAAOf,IAAKS,IACZ,4BACER,QAAU,WAjBZS,EAAOZ,QAAQe,UAAYJ,EAAQX,QAAQC,MAC3CY,EAAQb,QAAQgB,MAAMC,WAAW,WAejC,SAmBWC,EATH,SAAC3B,GAEX,OACE,6BACE,kBAAC,EAAD,QCpEN4B,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.47540660.chunk.js","sourcesContent":["import React, { useState, useRef, forwardRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst InputField = (props) => {\n\n  \n  const inputRef = useRef()\n\n  const [ inputText, setInputText ] = useState(\"\")\n\n  const [tasks, setTasks] = useState([])\n\n  return(\n    <div>\n    <div>\n      <input onChange={()=> {\n                          setInputText(inputRef.current.value)\n                      }} ref={inputRef} ></input>\n      <button onClick = {() =>{\n                          setTasks((tasks) => [...tasks, <Task inputText={inputText} setTasks={setTasks}  tasks={tasks}/>])\n                          console.log(tasks)\n                        }}>\n                        Add</button>\n      <button>Edit</button>\n    </div>\n    <div>\n      {tasks.map((task, i) => task)}\n    </div>\n    </div>\n  )\n}\n\nconst Task = ({inputText, setTasks, tasks}) => {\n  let taskRef = useRef()\n\n  let editRef = useRef()\n  \n  let divRef = useRef()\n\n  let hideRef = useRef()\n\n  const hider = () => {\n    divRef.current.innerHTML = editRef.current.value\n    hideRef.current.style.visibility=\"hidden\"\n\n  }\n\n  return(\n    <div ref={taskRef}>\n    <div ref={divRef}>{inputText}</div>\n    <button className=\"delete\" onClick={() => {\n      taskRef.current.innerHTML = null\n      console.log(taskRef)}}>Delete</button>\n    <button onClick={() => {\n      hideRef.current.style.visibility=\"visible\"\n    }} >Edit</button>\n    <div ref={hideRef}  style={{visibility:\"hidden\"}}>\n    <input ref={editRef}></input>\n    <button \n      onClick= {() => {\n        hider()\n      }}>OK</button>\n    </div>\n    </div>\n  )\n}\n\n\nconst App = (props) => {\n\n  return (\n    <div>\n      <InputField />\n   </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}